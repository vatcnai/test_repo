name: Deploy to Google Cloud Platform

on:
  push:
    branches:
      - main

permissions:
  contents: "read"
  id-token: "write"
  packages: "read"

jobs:
  build_and_push_gcp:
    runs-on: ubuntu-22.04
    env:
      REGISTRY_GCP: us-central1-docker.pkg.dev/cicd-demo-460905
      REPOSITORY_GCP: my-docker-repo
      IMAGE_NAME: my-app
      IMAGE_TAG: latest
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Create env file for Docker secrets
        run: |
          touch .env.docker
          echo "NODE_ENV=production" > .env.docker

      - name: Build Docker image
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t ${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }} \
            --label "org.opencontainers.image.title=My Application" \
            --label "org.opencontainers.image.description=Node.js application deployed via GitHub Actions" \
            --label "org.opencontainers.image.version=${{ env.IMAGE_TAG }}" \
            --label "org.opencontainers.image.revision=${{ github.sha }}" \
            --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --label "org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}" \
            --label "org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}" \
            --label "org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/blob/main/README.md" \
            --label "org.opencontainers.image.vendor=${{ github.repository_owner }}" \
            --label "org.opencontainers.image.licenses=MIT" \
            --label "build.number=${{ github.run_number }}" \
            --label "build.id=${{ github.run_id }}" \
            --label "git.branch=${{ github.ref_name }}" \
            --label "git.commit=${{ github.sha }}" \
            --label "git.commit.short=${{ github.sha }}" \
            --secret id=env,src=.env.docker \
            .

      - name: Clean up env file
        run: rm .env.docker

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Tag image for Google Cloud
        run: |
          # Tag with latest
          docker tag ${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }} \
            ${{ env.REGISTRY_GCP }}/${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          # Tag with commit SHA
          docker tag ${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }} \
            ${{ env.REGISTRY_GCP }}/${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA }}

      - name: Push image to Artifact Registry
        run: |
          # Push latest tag
          docker push ${{ env.REGISTRY_GCP }}/${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          # Push commit SHA tag
          docker push ${{ env.REGISTRY_GCP }}/${{ env.REPOSITORY_GCP }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA }}
